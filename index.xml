<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Euphonium1998&#39;s  Blog</title>
    <link>https://euphonium1998.github.io/</link>
    <description>Recent content on Euphonium1998&#39;s  Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 24 Aug 2020 15:16:38 +0800</lastBuildDate>
    
	<atom:link href="https://euphonium1998.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Golang Http体验之一</title>
      <link>https://euphonium1998.github.io/golang-http%E4%BD%93%E9%AA%8C%E4%B9%8B%E4%B8%80/</link>
      <pubDate>Fri, 04 Sep 2020 19:07:06 +0800</pubDate>
      
      <guid>https://euphonium1998.github.io/golang-http%E4%BD%93%E9%AA%8C%E4%B9%8B%E4%B8%80/</guid>
      <description>前言 最近正好实习期间有用到golang的http服务，就自己也用了些课余时间学习并且简单敲了（copy）了一些demo代码，详细可以见https://github.com/euphonium1998/ginDemo我的golang http仓库
参考的学习资料主要是：
 https://github.com/gin-gonic/gin https://github.com/ffhelicopter/Go42  Golang net/http基础库 其实我觉得golang的http库真的涉及的蛮好的。跟C++这种相比肯定代码更加简洁然后让代码重点都聚焦在http协议本身而不是其他连接之类的；跟Java相比（相对SpringBoot而言，Netty还没用过）Java代码封装的太好了，很多一个注解就解决了，但是你可能都不知道你实际发送的http请求body和header的请求。而golang的基础库代码真的觉得蛮好的，封装的恰到好处。可能代码长度跟Java比会多一些，但我现在更喜欢这种手动填充header，自己写代码序列化的过程。感觉这样更能让我这种新手理解协议。
server 非常简单，直接看下面代码
package main import ( &amp;quot;encoding/json&amp;quot; &amp;quot;fmt&amp;quot; &amp;quot;io/ioutil&amp;quot; &amp;quot;net/http&amp;quot; ) type Rectangle struct { X int `json:&amp;quot;x&amp;quot;` Y int `json:&amp;quot;y&amp;quot;` Square int `json:&amp;quot;square&amp;quot;` } func main() { http.HandleFunc(&amp;quot;/test&amp;quot;, myFunc) err := http.ListenAndServe(&amp;quot;:8080&amp;quot;, nil) if err != nil { fmt.Printf(&amp;quot;begin http server error[%v]\n&amp;quot;, err) } } func myFunc(w http.ResponseWriter, r *http.Request) { var rectangle Rectangle //将结果按照json编码写入http response body defer func() { wData, _ := json.</description>
    </item>
    
    <item>
      <title>2020 年度计划</title>
      <link>https://euphonium1998.github.io/2020-%E5%B9%B4%E5%BA%A6%E8%AE%A1%E5%88%92/</link>
      <pubDate>Wed, 02 Sep 2020 20:37:43 +0800</pubDate>
      
      <guid>https://euphonium1998.github.io/2020-%E5%B9%B4%E5%BA%A6%E8%AE%A1%E5%88%92/</guid>
      <description>总结 基本上确定保研，三年了。准备开始为研究生生活做准备
计划 2020年还剩4个月。9月的话确定毕设题目，同时再看看go。最后三个月干啥取决于实习情况了。要么搞网络开发，要么专心看导师的平台代码</description>
    </item>
    
    <item>
      <title>2020 九月计划</title>
      <link>https://euphonium1998.github.io/2020-%E4%B9%9D%E6%9C%88%E8%AE%A1%E5%88%92/</link>
      <pubDate>Wed, 02 Sep 2020 20:36:58 +0800</pubDate>
      
      <guid>https://euphonium1998.github.io/2020-%E4%B9%9D%E6%9C%88%E8%AE%A1%E5%88%92/</guid>
      <description>八月总结 玩的太爽了。九月要准备干点人事
九月计划 学习go的http框架gin，准备鹏城实验室的面试。确认毕设题目。希望可以用三周时间学一下grpc的内容</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://euphonium1998.github.io/about/</link>
      <pubDate>Mon, 24 Aug 2020 15:16:53 +0800</pubDate>
      
      <guid>https://euphonium1998.github.io/about/</guid>
      <description>最后更新于2020.8
 本人哈尔滨工业大学（深圳）在读本科生 职业目标：优秀后端开发工程师 爱好：足球、游戏 work life balance GitHub地址：https://github.com/euphonium1998  </description>
    </item>
    
    <item>
      <title>Hugo博客搭建</title>
      <link>https://euphonium1998.github.io/hugo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Mon, 24 Aug 2020 11:30:31 +0800</pubDate>
      
      <guid>https://euphonium1998.github.io/hugo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</guid>
      <description>前言 hugo博客是基于golang开发的，生成静态文件速度极快，而且最关键的是下载过程不容易出现包引入异常的问题。所以作者我把hexo博客框架换成了目前的hugo博客框架。本人搭建过程主要参考以下两个攻略：
 CodeSheep B站up主hugo博客搭建视频 Windows下搭建Hugo博客  搭建过程记录  https://github.com/gohugoio/hugo/releases找到windows的64版本下载。并把解压后的目录加载到环境变量path中 hugo new site myblog 创建博客site 到https://themes.gohugo.io/中下载主题，然后根据主题的说明文档进行配置（我根据主题相关文档将config.yaml替换了config.toml） 接下来的步骤是每次修改日志都需要的，都是在博客根目录执行  hugo new post/xxx.md //创建日志文件，记得加入tags: [&amp;quot;xx&amp;quot;, &amp;quot;yy&amp;quot;] hugo server -t cupper-hugo-theme --buildDrafts //根据主题打开测试服务器，cupper-hugo-theme这个是主题名 hugo --theme=cupper-hugo-theme --baseUrl=&amp;quot;https://euphonium1998.github.io/&amp;quot; --buildDrafts //根据GitHub pages生成对应静态文件 git一系列操作把文件传到对应仓库即可  搭建过程可能出现根目录要commit提交，那按照提示要求做就行
部署linux远程nginx服务器 主要步骤跟上面基本一致但要改些东西
要将config.yaml中的baseURL改成baseURL: http://www.euphonium.cn/ (我的主机)
nginx相关配置文件在/etc/nginx，其中blog的配置在/etc/nginx/conf.d/blog.conf
hugo --theme=cupper-hugo-theme --buildDrafts //生成静态文件 进入阿里云linux机 ps aux | grep ngnix kill -9 &amp;lt;两个nginx pid&amp;gt; nginx //reboot  </description>
    </item>
    
  </channel>
</rss>